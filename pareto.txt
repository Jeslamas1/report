Option Explicit

'==== CONFIG ====
Private Const RAW_SHEET As String = "RawData"
Private Const WS_TMP As String = "~tmpPareto"
Private Const WS_PARETO_TYPE As String = "Pareto_FailureType"
Private Const WS_PARETO_COMP As String = "Pareto_ComponentName"

'==== ENTRY POINTS ====
Public Sub Pareto_FailureType_All()
    BuildPareto categoryHeader:="Failure Type", _
                normalizeToFive:=True, _
                chartSheetName:=WS_PARETO_TYPE, _
                chartTitle:="Pareto - Failures by Failure Type", _
                monthKey:=""
End Sub

Public Sub Pareto_Component_All()
    BuildPareto categoryHeader:="Component Name", _
                normalizeToFive:=False, _
                chartSheetName:=WS_PARETO_COMP, _
                chartTitle:="Pareto - Failures by Component", _
                monthKey:=""
End Sub

'==== CORE ====
Private Sub BuildPareto(ByVal categoryHeader As String, _
                        ByVal normalizeToFive As Boolean, _
                        ByVal chartSheetName As String, _
                        ByVal chartTitle As String, _
                        ByVal monthKey As String)

    Dim ws As Worksheet: Set ws = ThisWorkbook.Worksheets(RAW_SHEET)
    Dim lastRow As Long, lastCol As Long
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    If lastRow < 2 Then MsgBox "No data rows.", vbExclamation: Exit Sub
    lastCol = ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column

    ' headers (exactly as in your sheet)
    Dim cRes As Long, cType As Long, cName As Long, cMonth As Long, cFails As Long, cCat As Long
    cRes = FindHeader(ws, "Result", lastCol)
    cType = FindHeader(ws, "Failure Type", lastCol)
    cName = FindHeader(ws, "Component Name", lastCol)
    cMonth = FindHeader(ws, "Month", lastCol)
    cFails = FindHeader(ws, "#Fails", lastCol)

    If cRes = 0 Or cMonth = 0 Or cFails = 0 Then
        MsgBox "Missing required headers (Result, Month, #Fails).", vbExclamation: Exit Sub
    End If

    If LCase$(categoryHeader) = "failure type" Then
        cCat = cType
    ElseIf LCase$(categoryHeader) = "component name" Then
        cCat = cName
    Else
        MsgBox "Unknown category header: " & categoryHeader, vbExclamation: Exit Sub
    End If

    Dim dict As Object: Set dict = CreateObject("Scripting.Dictionary")
    dict.CompareMode = 1 ' TextCompare

    ' 5 fixed buckets for Failure Type
    Dim buckets As Variant, i As Long
    If normalizeToFive Then
        buckets = Array("TBD:PART", "TBD", "PART", "OP ERROR", "WORKMANSHIP")
        For i = LBound(buckets) To UBound(buckets)
            dict(buckets(i)) = 0#
        Next i
    End If

    ' tally (exclude only explicit "Pass"), weight by #Fails (blank -> 1)
    Dim r As Long, resVal As String, rawCat As String, catKey As String
    Dim w As Double, valFails As Variant, mKey As String, total As Double
    For r = 2 To lastRow
        mKey = Trim$(CStr(ws.Cells(r, cMonth).Value))
        If (Len(monthKey) = 0) Or (LCase$(mKey) = LCase$(monthKey)) Then
            resVal = LCase$(Trim$(CStr(ws.Cells(r, cRes).Value)))
            If resVal <> "pass" Then
                rawCat = Trim$(CStr(ws.Cells(r, cCat).Value))
                If normalizeToFive Then
                    If Len(rawCat) = 0 Then rawCat = "TBD"
                    catKey = MapFailureTypeToBucket5(rawCat)
                Else
                    catKey = IIf(Len(rawCat) = 0, "(Unspecified)", rawCat)
                End If

                valFails = ws.Cells(r, cFails).Value
                If IsNumeric(valFails) And Len(Trim$(valFails)) > 0 Then
                    w = CDbl(valFails)
                Else
                    w = 1#
                End If

                If Not dict.Exists(catKey) Then dict(catKey) = 0#
                dict(catKey) = dict(catKey) + w
                total = total + w
            End If
        End If
    Next r

    ' helper sheet
    Dim wsTmp As Worksheet: Set wsTmp = GetOrAddSheet(WS_TMP)
    wsTmp.Cells.Clear
    wsTmp.Range("A1:E1").Value = Array("Category", "Count", "Percent", "CumPercent", "Rank")

    Dim keys As Variant, n As Long
    keys = dict.Keys: n = dict.Count
    If n = 0 Then
        wsTmp.Range("A2").Value = "No data to chart."
        BuildChart chartSheetName, chartTitle, wsTmp, 1
        Exit Sub
    End If

    For i = 0 To n - 1
        wsTmp.Cells(i + 2, 1).Value = CStr(keys(i))
        wsTmp.Cells(i + 2, 2).Value = CDbl(dict(keys(i)))
    Next i

    ' sort by Count desc
    With wsTmp.Sort
        .SortFields.Clear
        .SortFields.Add Key:=wsTmp.Range("B2").Resize(n, 1), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:=xlSortNormal
        .SetRange wsTmp.Range("A1").Resize(n + 1, 2)
        .Header = xlYes
        .Apply
    End With

    If total > 0 Then
        wsTmp.Range("C2").Resize(n, 1).FormulaR1C1 = "=RC[-1]/" & total
        wsTmp.Range("D2").Resize(n, 1).FormulaR1C1 = "=SUM(R2C3:RC[-1])"
    Else
        wsTmp.Range("C2:D" & n + 1).Value = 0
    End If
    wsTmp.Range("E2").Resize(n, 1).FormulaR1C1 = "=ROW()-1"
    wsTmp.Columns("A:E").AutoFit

    BuildChart chartSheetName, chartTitle, wsTmp, n
End Sub

'==== MAP TO 5 BUCKETS (renamed to avoid conflicts) ====
Private Function MapFailureTypeToBucket5(ByVal s As String) As String
    Dim t As String: t = LCase$(Trim$(s))
    t = Replace(t, vbTab, " ")
    Do While InStr(t, "  ") > 0: t = Replace(t, "  ", " "): Loop

    If (InStr(t, "tbd") > 0 And InStr(t, "part") > 0) Then
        MapFailureTypeToBucket5 = "TBD:PART"
    ElseIf t Like "*op error*" Or t Like "*operator error*" Or t Like "*op-error*" Then
        MapFailureTypeToBucket5 = "OP ERROR"
    ElseIf t Like "*workmanship*" Then
        MapFailureTypeToBucket5 = "WORKMANSHIP"
    ElseIf InStr(t, "tbd") > 0 Then
        MapFailureTypeToBucket5 = "TBD"
    ElseIf InStr(t, "part") > 0 Then
        MapFailureTypeToBucket5 = "PART"
    Else
        MapFailureTypeToBucket5 = "PART" ' fallback
    End If
End Function

'==== CHART ====
Private Sub BuildChart(ByVal chartSheetName As String, ByVal chartTitle As String, _
                       ByVal wsTmp As Worksheet, ByVal n As Long)
    Dim wsChart As Worksheet: Set wsChart = GetOrAddSheet(chartSheetName)
    wsChart.Cells.Clear

    Dim ch As ChartObject
    Set ch = wsChart.ChartObjects.Add(Left:=20, Top:=20, Width:=860, Height:=460)
    With ch.Chart
        .ChartType = xlColumnClustered
        .SetSourceData wsTmp.Range("A1").Resize(Application.Max(2, n + 1), 2)

        If n > 0 Then
            Dim sCum As Series
            Set sCum = .SeriesCollection.NewSeries
            sCum.Name = "Cumulative %"
            sCum.XValues = wsTmp.Range("A2").Resize(n, 1)
            sCum.Values = wsTmp.Range("D2").Resize(n, 1)
            sCum.ChartType = xlLine
            sCum.AxisGroup = xlSecondary

            With .Axes(xlValue, xlSecondary)
                .HasTitle = True
                .AxisTitle.Text = "Cumulative %"
                .MinimumScale = 0
                .MaximumScale = 1
                .TickLabels.NumberFormat = "0%"
            End With
        End If

        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "Weighted Fail Count"
        .HasTitle = True
        .ChartTitle.Text = chartTitle
        .Legend.Position = xlLegendPositionBottom
    End With
End Sub

'==== HELPERS ====
Private Function FindHeader(ByVal ws As Worksheet, ByVal headerText As String, ByVal lastCol As Long) As Long
    Dim c As Long
    For c = 1 To lastCol
        If LCase$(Trim$(CStr(ws.Cells(1, c).Value))) = LCase$(headerText) Then
            FindHeader = c: Exit Function
        End If
    Next c
    FindHeader = 0
End Function

Private Function GetOrAddSheet(ByVal name As String) As Worksheet
    Dim ws As Worksheet
    On Error Resume Next
    Set ws = ThisWorkbook.Worksheets(name)
    On Error GoTo 0
    If ws Is Nothing Then
        Set ws = ThisWorkbook.Worksheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        ws.Name = name
    End If
    Set GetOrAddSheet = ws
End Function
